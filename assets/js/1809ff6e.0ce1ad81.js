"use strict";(self.webpackChunkton_docs=self.webpackChunkton_docs||[]).push([[270],{4777:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var a=t(811),r=(t(7953),t(8860));const o={title:"Script Template",sidebar_position:3,image:"/img/arrayfield/arrayfieldb.jpg",description:"Template"},i=void 0,l={unversionedId:"example-scripts/ScriptTemplate",id:"example-scripts/ScriptTemplate",title:"Script Template",description:"Template",source:"@site/docs/starlight/example-scripts/ScriptTemplate.md",sourceDirName:"example-scripts",slug:"/example-scripts/ScriptTemplate",permalink:"/docs/starlight/example-scripts/ScriptTemplate",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Script Template",sidebar_position:3,image:"/img/arrayfield/arrayfieldb.jpg",description:"Template"},sidebar:"tutorialSidebar",previous:{title:"Credits",permalink:"/docs/starlight/example-scripts/credits"},next:{title:"Changelog",permalink:"/docs/starlight/example-scripts/changelog"}},c={},s=[{value:"Script",id:"script",level:2}],u={toc:s},p="wrapper";function d({components:e,...n}){return(0,r.yg)(p,(0,a.A)({},u,n,{components:e,mdxType:"MDXLayout"}),(0,r.yg)("h2",{id:"script"},"Script"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-lua"},'local ArrayField = loadstring(game:HttpGet(\'https://raw.githubusercontent.com/UI-Interface/ArrayField/main/Source\'))()\nlocal Window = ArrayField:CreateWindow({\n        Name = "ArrayField Example Window",\n        LoadingTitle = "ArrayField Interface Suite",\n        LoadingSubtitle = "by Arrays",\n        ConfigurationSaving = {\n            Enabled = true,\n            FolderName = nil, -- Create a custom folder for your hub/game\n            FileName = "ArrayField"\n        },\n        Discord = {\n            Enabled = false,\n            Invite = "sirius", -- The Discord invite code, do not include discord.gg/\n            RememberJoins = true -- Set this to false to make them join the discord every time they load it up\n        },\n        KeySystem = true, -- Set this to true to use our key system\n        KeySettings = {\n            Title = "ArrayField",\n            Subtitle = "Key System",\n            Note = "Join the discord (discord.gg/sirius)",\n            FileName = "ArrayFieldsKeys",\n            SaveKey = false,\n            GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like ArrayField to get the key from\n            Key = {"Hello",\'Bye\'},\n            Actions = {\n                [1] = {\n                    Text = \'Click here to copy the key link\',\n                    OnPress = function()\n\n                    end,\n                }\n            },\n        }\n    })\n    local Tab = Window:CreateTab("Tab Example", 4483362458) -- Title, Image\n    local Tab2 = Window:CreateTab("Tab Example 2") -- Title, Image\n    local Section = Tab:CreateSection("Section Example",false) -- The 2nd argument is to tell if its only a Title and doesnt contain element\n    Tab:CreateSpacing(nil,10)\n    local Button = Tab:CreateButton({\n        Name = "Button Example",\n        Info = {\n            Title = \'This is a Button\',\n            Description = \'This is a description for the button you know.\',\n        },\n        Interact = \'Changable\',\n        Callback = function()\n            print(\'Pressed\')\n        end,\n    })\n    Tab:CreateSpacing(nil,10)\n    local Toggle = Tab:CreateToggle({\n        Name = "Toggle Example",\n        Info = {\n            Title = \'Slider template\',\n            Image = \'12735851647\',\n            Description = \'Just a slider for stuff\',\n        },\n        CurrentValue = false,\n        Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you\'re using configuration saving to ensure no overlaps\n        Callback = function(Value)\n            print(Value)\n        end,\n    })\n    Tab:CreateSpacing(nil,10)\n    local ColorPicker = Tab:CreateColorPicker({\n        Name = "Color Picker",\n        Color = Color3.fromRGB(2,255,255),\n        Flag = "ColorPicker1",\n        Callback = function(Value)\n            print(Value)\n        end\n    })\n    Tab:CreateSpacing(nil,10)\n    local Slider = Tab:CreateSlider({\n        Name = "Slider Example",\n        Range = {0, 100},\n        Increment = 10,\n        Suffix = "Bananas",\n        CurrentValue = 10,\n        Flag = "Slider1",\n        Callback = function(Value)\n            print(Value)\n        end,\n    })\n    Tab:CreateSpacing(nil,10)\n    local Keybind = Tab:CreateKeybind({\n        Name = "Keybind Example",\n        CurrentKeybind = "Q",\n        HoldToInteract = false,\n        Flag = "Keybind1",\n        Callback = function(Keybind)\n\n        end,\n    })\n    Tab:CreateSpacing(nil,10)\n    local Section2 = Tab:CreateSection("Inputs Examples",true)\n    Tab:CreateInput({\n        Name = "Numbers Only",\n        PlaceholderText = "Amount",\n        NumbersOnly = true,\n        OnEnter = true,\n        RemoveTextAfterFocusLost = true,\n        Callback = function(Text)\n            print(Text)\n        end,\n    })\n    Tab:CreateInput({\n        Name = "11 Characters Limit",\n        PlaceholderText = "Text",\n        CharacterLimit = 11,\n        RemoveTextAfterFocusLost = true,\n        Callback = function(Text)\n            print(Text)\n        end,\n    })\n    Tab:CreateInput({\n        Name = "No RemoveTextAfterFocusLost",\n        PlaceholderText = "Input",\n        RemoveTextAfterFocusLost = false,\n        Callback = function(Text)\n            print(Text)\n        end,\n    })\n    local Section3= Tab:CreateSection("Dropdown Examples",true)\n    local MultiSelectionDropdown = Tab:CreateDropdown({\n        Name = "Multi Selection",\n        Options = {"Option 1","Option 2",\'Option 3\'},\n        CurrentOption = {"Option 1","Option 3"} ,\n        MultiSelection = true,\n        Flag = "Dropdown1",\n        Callback = function(Option)\n            print(Option)\n        end,\n    })\n    local SingleSelection = Tab:CreateDropdown({\n        Name = "Single Selection",\n        Options = {"Option 1","Option 2"},\n        CurrentOption = "Option 1",\n        MultiSelection = false,\n        Flag = "Dropdown2",\n        Callback = function(Option)\n            print(Option)\n        end,\n    })\n    local Label = Tab:CreateLabel("Thanks for using Arrayfield, there were alot of issues but here we are!",Section)\n    local Paragraph = Tab:CreateParagraph({Title = "Paragraph Example", Content = "Paragraph Example"},Section)\n    local Sets = Tab:CreateSection(\'Set Functions\',false)\n    local SButton\n    SButton = Tab:CreateButton({\n        Name = "Button Example",\n        Interact = \'Interact\',\n        SectionParent = Sets,\n        Callback = function()\n            SButton:Set(nil,\'New Interaction\')\n        end\n    })\n    Tab:CreateButton({\n        Name = "Dropdown Set",\n        Interact = \'Interact\',\n        SectionParent = Sets,\n        Callback = function()\n            SingleSelection:Set(\'Option 1\')\n        end\n    })\n\n    local LockTesting = Tab:CreateSection(\'Lockdown Section\',false)\n    local ToLock = {}\n    Tab:CreateToggle({\n        Name = "Lockdown",\n        SectionParent = LockTesting,\n        CurrentValue = false,\n        Callback = function(Value)\n            if Value then\n                for _,v in ToLock do\n                    v:Lock(\'Locked\')\n                end\n            else\n                for _,v in ToLock do\n                    v:Unlock(\'Locked\')\n                end\n            end\n        end,\n    })\n    Tab:CreateSpacing(LockTesting)\n    ToLock.Button = Tab:CreateButton({\n        SectionParent = LockTesting,\n        Name = "Button Example",\n        Interact = \'Interact\',\n        Callback = function()\n            print(\'Pressed\')\n        end,\n    })\n    ToLock.Toggle = Tab:CreateToggle({\n        SectionParent = LockTesting,\n        Name = "Toggle Example",\n        CurrentValue = false,\n        Flag = "Toggle2", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you\'re using configuration saving to ensure no overlaps\n        Callback = function(Value)\n            print(Value)\n        end,\n    })\n    ToLock.ColorPicker = Tab:CreateColorPicker({\n        Name = "Color Picker",\n        SectionParent = LockTesting,\n        Color = Color3.fromRGB(2,255,255),\n        Flag = "ColorPicker2",\n        Callback = function(Value)\n            print(Value)\n        end\n    })\n    ToLock.Slider = Tab:CreateSlider({\n        SectionParent = LockTesting,\n        Name = "Slider Example",\n        Range = {0, 100},\n        Increment = 10,\n        Suffix = "Bananas",\n        CurrentValue = 10,\n        Flag = "Slider2",\n        Callback = function(Value)\n            print(Value)\n        end,\n    })\n    ToLock.Keybind = Tab:CreateKeybind({\n        Name = "Keybind Example",\n        CurrentKeybind = "Q",\n        HoldToInteract = false,\n        SectionParent = LockTesting,\n        Flag = "Keybind2",\n        Callback = function(Keybind)\n\n        end,\n    })\n')))}d.isMDXComponent=!0},8860:(e,n,t)=>{t.d(n,{xA:()=>u,yg:()=>f});var a=t(7953);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter(function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable})),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach(function(n){r(e,n,t[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach(function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=a.createContext({}),s=function(e){var n=a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=s(e.components);return a.createElement(c.Provider,{value:n},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef(function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=s(t),m=r,f=p["".concat(c,".").concat(m)]||p[m]||d[m]||o;return t?a.createElement(f,i(i({ref:n},u),{},{components:t})):a.createElement(f,i({ref:n},u))});function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=m;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l[p]="string"==typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=t[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"}}]);