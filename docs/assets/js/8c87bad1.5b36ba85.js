"use strict";(self.webpackChunkton_docs=self.webpackChunkton_docs||[]).push([[573],{5806:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>g,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var i=t(811),r=(t(7953),t(8860));const a={title:"Binding Keys",sidebar_position:2,image:"/img/luna/banner.png",description:"The Sexiest UI Library For Roblox."},o="Binding Keys in Luna",s={unversionedId:"interactions/binds",id:"interactions/binds",title:"Binding Keys",description:"The Sexiest UI Library For Roblox.",source:"@site/docs/luna/interactions/binds.md",sourceDirName:"interactions",slug:"/interactions/binds",permalink:"/luna/interactions/binds",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Binding Keys",sidebar_position:2,image:"/img/luna/banner.png",description:"The Sexiest UI Library For Roblox."},sidebar:"tutorialSidebar",previous:{title:"Elements",permalink:"/luna/interactions/elements"},next:{title:"Textual Elements",permalink:"/luna/ui-components/texts"}},d={},l=[{value:"Creating A Keybind",id:"creating-a-keybind",level:2},{value:"Changing The Window Keybind Using Luna&#39;s Binded Keys",id:"changing-the-window-keybind-using-lunas-binded-keys",level:3}],c={toc:l},u="wrapper";function g({components:e,...n}){return(0,r.yg)(u,(0,i.A)({},c,n,{components:e,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"binding-keys-in-luna"},"Binding Keys in Luna"),(0,r.yg)("admonition",{type:"note"},(0,r.yg)("p",{parentName:"admonition"},"While using :CreateKeybind() is fine, it is superseded by :CreateBind() and shouldn't be used for future work as it won't receive updates.",(0,r.yg)("br",{parentName:"p"}),"\n","(eg. CreateKeybind doesnt have OnChangedCallback)")),(0,r.yg)("h2",{id:"creating-a-keybind"},"Creating A Keybind"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-lua"},'local Bind = Tab:CreateBind({\n    Name = "Bind Example",\n    Description = nil,\n    CurrentBind = "Q", -- Check Roblox Studio Docs For KeyCode Names\n    HoldToInteract = false, -- When true, Instead of toggling, You hold to achieve the active state of the Bind\n        Callback = function(BindState)\n         -- The function that takes place when the keybind is pressed\n         -- The variable (BindState) is a boolean for whether the Bind is being held or not (HoldToInteract needs to be true) OR it is whether the Bind is active\n        end,\n\n    OnChangedCallback = function(Bind)\n     -- The function that takes place when the binded key changes\n     -- The variable (Bind) is a Enum.KeyCode for the new Binded Key\n    end,\n}, "Bind") -- A flag is the identifier for the configuration file, make sure every element has a different flag if you\'re using configuration saving to ensure no overlaps\n')),(0,r.yg)("h3",{id:"changing-the-window-keybind-using-lunas-binded-keys"},"Changing The Window Keybind Using Luna's Binded Keys"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-lua"},'local Bind = Tab:CreateBind({\n    Name = "Luna Interface Bind",\n    Description = nil,\n    CurrentBind = "K", -- Check Roblox Studio Docs For KeyCode Names\n    HoldToInteract = false, -- When true, Instead of toggling, You hold to achieve the active state of the Bind\n        Callback = function()\n        end,\n\n    OnChangedCallback = function(Bind)\n     Window.Bind = Bind\n    end,\n}, "WindowMenuBind") -- A flag is the identifier for the configuration file, make sure every element has a different flag if you\'re using configuration saving to ensure no overlaps\n')))}g.isMDXComponent=!0},8860:(e,n,t)=>{t.d(n,{xA:()=>c,yg:()=>f});var i=t(7953);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter(function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable})),t.push.apply(t,i)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach(function(n){r(e,n,t[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach(function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})}return e}function s(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var d=i.createContext({}),l=function(e){var n=i.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=l(e.components);return i.createElement(d.Provider,{value:n},e.children)},u="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},p=i.forwardRef(function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,d=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=l(t),p=r,f=u["".concat(d,".").concat(p)]||u[p]||g[p]||a;return t?i.createElement(f,o(o({ref:n},c),{},{components:t})):i.createElement(f,o({ref:n},c))});function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,o=new Array(a);o[0]=p;var s={};for(var d in n)hasOwnProperty.call(n,d)&&(s[d]=n[d]);s.originalType=e,s[u]="string"==typeof e?e:r,o[1]=s;for(var l=2;l<a;l++)o[l]=t[l];return i.createElement.apply(null,o)}return i.createElement.apply(null,t)}p.displayName="MDXCreateElement"}}]);