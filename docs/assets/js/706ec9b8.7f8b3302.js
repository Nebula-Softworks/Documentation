"use strict";(self.webpackChunknebula_docs=self.webpackChunknebula_docs||[]).push([[2675],{4899:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>y,frontMatter:()=>l,metadata:()=>o,toc:()=>g});var a=n(811),r=(n(7953),n(8860));const l={title:"Quick Start Guide",sidebar_position:2,image:"/img/twilight/banner.png",description:"The Extrasensory Star."},i="Getting Started",o={unversionedId:"getting-started/quick-start",id:"getting-started/quick-start",title:"Quick Start Guide",description:"The Extrasensory Star.",source:"@site/docs/twilight/getting-started/quick-start.md",sourceDirName:"getting-started",slug:"/getting-started/quick-start",permalink:"/twilight/getting-started/quick-start",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Quick Start Guide",sidebar_position:2,image:"/img/twilight/banner.png",description:"The Extrasensory Star."},sidebar:"tutorialSidebar",previous:{title:"Importing The Library",permalink:"/twilight/getting-started/booting-lib"},next:{title:"Example Script",permalink:"/twilight/getting-started/example"}},s={},g=[{value:"The API",id:"the-api",level:2},{value:"Quick Summary",id:"quick-summary",level:3},{value:"Continuing...",id:"continuing",level:2},{value:"Full Copy And Paste",id:"full-copy-and-paste",level:2}],u={toc:g},p="wrapper";function y({components:e,...t}){return(0,r.yg)(p,(0,a.A)({},u,t,{components:e,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"getting-started"},"Getting Started"),(0,r.yg)("p",null,"Now that we've imported the library into our project, let us create our first simply ESP using Twilight!",(0,r.yg)("br",{parentName:"p"}),"\n","Let's start by taking a look at the API that Twilight returns when called.  "),(0,r.yg)("h2",{id:"the-api"},"The API"),(0,r.yg)("h3",{id:"quick-summary"},"Quick Summary"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Property"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Instance"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("em",{parentName:"td"},"ScreenGui")),(0,r.yg)("td",{parentName:"tr",align:null},"The ScreenGUI that contains all our ESP Items excluding chams, allowing for easy toggling.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_connections"),(0,r.yg)("td",{parentName:"tr",align:null},"table ",(0,r.yg)("strong",{parentName:"td"},"[READ ONLY]")),(0,r.yg)("td",{parentName:"tr",align:null},"Contains all Connections to ensure proper destruction and memory savind.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"settings"),(0,r.yg)("td",{parentName:"tr",align:null},"twilightSettings"),(0,r.yg)("td",{parentName:"tr",align:null},"Configuration for the ESP.")))),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Function"),(0,r.yg)("th",{parentName:"tr",align:null},"Arguments"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Load"),(0,r.yg)("td",{parentName:"tr",align:null},"nil"),(0,r.yg)("td",{parentName:"tr",align:null},"Loads the ESP")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Unload"),(0,r.yg)("td",{parentName:"tr",align:null},"Destroy",(0,r.yg)("strong",{parentName:"td"},"?")," : ",(0,r.yg)("em",{parentName:"td"},"boolean")),(0,r.yg)("td",{parentName:"tr",align:null},"Unloads the ESP. Destroy will destroy all the ESP Instances.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"EnablePlayerESP"),(0,r.yg)("td",{parentName:"tr",align:null},"nil"),(0,r.yg)("td",{parentName:"tr",align:null},"Enables ESP for players.")))),(0,r.yg)("blockquote",null,(0,r.yg)("p",{parentName:"blockquote"},"View the rest in the API References")),(0,r.yg)("h2",{id:"continuing"},"Continuing..."),(0,r.yg)("p",null,"And there are alot more methods and functions, but let us focus on these key well, returns.",(0,r.yg)("br",{parentName:"p"}),"\n","We have a settings table ",(0,r.yg)("em",{parentName:"p"},"(with the twilightSettings property list)")," that controls what runs and what doesn't in our ESP, as well as color choices.",(0,r.yg)("br",{parentName:"p"}),"\n","So let's start with that!"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-lua"},"-- Assuming you have the library called as Twilight somewhere above this snippet.\n\nTwilight.settings = {\n    currentColors = {\n        boxNeutral = Color3.new(1, 1, 1), -- Twilight's unique and modern rounded corner boxes\n\n        boxOutlineNeutral = Color3.new(1, 1, 1), -- The Classic Drawing Box\n    },\n    boxEnabled = true, -- You can set this to false if you only want the classic sharp boxes.\n    outlineBoxEnabled = true, -- You can set this to false if you only want the corner boxes.\n    -- or you can enable both like the example here!\n\n    tracersEnabled = false, healthBarEnabled = false,  -- we will come back to these later on in the API Reference. \n}\n")),(0,r.yg)("blockquote",null,(0,r.yg)("p",{parentName:"blockquote"},"You do not need to copy this script, this is just a quick example.  ")),(0,r.yg)("p",null,"This should set our ESP to have both the corner boxes and classic boxes, with it being set to white.",(0,r.yg)("br",{parentName:"p"}),"\n","Now let's call the Load function and see our ESP in action.  "),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-lua"},"Twilight.Load()\n")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"If you've done everything right so far... nothing should popup."),(0,r.yg)("br",{parentName:"p"}),"\n","Or at least for now, since we have not enabled the Player ESP yet. You might be wondering, why is the API this way, and well,",(0,r.yg)("br",{parentName:"p"}),"\n","its to ensure equality in Twilight's convenience for everything an ESP Library can be used for!  "),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-lua"},"Twilight.EnablePlayerESP()\n")),(0,r.yg)("p",null,"And this is what we should have if you've done everything correctly so far!  "),(0,r.yg)("p",null,(0,r.yg)("img",{alt:"image",src:n(8536).A,width:"1899",height:"941"}),"  "),(0,r.yg)("p",null,"Let's continue the rest of our ESP Script by heading to the API Reference.",(0,r.yg)("br",{parentName:"p"}),"\n","I sadly won't be going step by step anymore, but I hope you have gotten the gist of how Twilight works! Cya later."),(0,r.yg)("h2",{id:"full-copy-and-paste"},"Full Copy And Paste"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-lua"},"Twilight.settings = {\n    currentColors = {\n        boxNeutral = Color3.new(1, 1, 1),\n\n        boxOutlineNeutral = Color3.new(1, 1, 1), \n    },\n    boxEnabled = true, \n    outlineBoxEnabled = true, \n\n    tracersEnabled = false, healthBarEnabled = false, \n}\n\nTwilight.EnablePlayerESP()\nTwilight.Load()\n")))}y.isMDXComponent=!0},8536:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/correct-f99c6500448bf5f5324cf7147302d6f8.png"},8860:(e,t,n)=>{n.d(t,{xA:()=>u,yg:()=>d});var a=n(7953);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach(function(t){r(e,t,n[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),g=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=g(e.components);return a.createElement(s.Provider,{value:t},e.children)},p="mdxType",y={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef(function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=g(n),c=r,d=p["".concat(s,".").concat(c)]||p[c]||y[c]||l;return n?a.createElement(d,i(i({ref:t},u),{},{components:n})):a.createElement(d,i({ref:t},u))});function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=c;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[p]="string"==typeof e?e:r,i[1]=o;for(var g=2;g<l;g++)i[g]=n[g];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"}}]);